# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on PR
on:
  pull_request:

jobs:
  build_and_preview:
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.firebase_hosting_preview.outputs.details_url }}
    steps:
      - uses: actions/checkout@v3
      - run: sudo snap install hugo --channel=extended
      - run: cd hugo && hugo --minify
      - name: deploy to preview channel
        id: firebase_hosting_preview
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_IC_WEB_7B0DF }}'
          projectId: ic-web-7b0df
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels
      - name: Check outputs
        run: |
          echo urls ${{steps.firebase_hosting_preview.outputs.url}}
          echo expire_time ${{steps.firebase_hosting_preview.outputs.expire_time}}
          echo details_url ${{steps.firebase_hosting_preview.outputs.details_url}}
  check_broken_links:
    runs-on: ubuntu-latest
    needs: [build_and_preview]
    steps:
      - uses: technote-space/broken-link-checker-action@v2
        with:
          TARGET: ${{ needs.build_and_preview.outputs.url }}
  test_with_lighthouse:
    runs-on: ubuntu-latest
    needs: [build_and_preview]
    steps:
      - uses: actions/checkout@v3
      - name: Audit preview url with Lighthouse
        id: lighthouse_audit
        uses: treosh/lighthouse-ci-action@9.3.0
        with:
          urls: |
            ${{ needs.build_and_preview.outputs.url }}
          uploadArtifacts: false
          temporaryPublicStorage: true
      - name: Format lighthouse score
        id: format_lighthouse_score
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const result = ${{ steps.lighthouse_audit.outputs.manifest }}[0].summary
            const links = ${{ steps.lighthouse_audit.outputs.links }}
            const formatResult = (res) => Math.round((res * 100))
            Object.keys(result).forEach(key => result[key] = formatResult(result[key]))
            const score = res => res >= 90 ? 'üü¢' : res >= 50 ? 'üü†' : 'üî¥'
            const comment = [
                `‚ö°Ô∏è [Lighthouse report](${Object.values(links)[0]}) for the changes in this PR:`,
                '| Category | Score |',
                '| --- | --- |',
                `| ${score(result.performance)} Performance | ${result.performance} |`,
                `| ${score(result.accessibility)} Accessibility | ${result.accessibility} |`,
                `| ${score(result['best-practices'])} Best practices | ${result['best-practices']} |`,
                `| ${score(result.seo)} SEO | ${result.seo} |`,
                `| ${score(result.pwa)} PWA | ${result.pwa} |`,
                ' ',
                `*Lighthouse ran on [${Object.keys(links)[0]}](${Object.keys(links)[0]})*`
            ].join('\n')
            core.setOutput("comment", comment);
      - name: Add comment to PR
        id: comment_to_pr
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.issue.number }}
          header: lighthouse
          message: |
            ${{ steps.format_lighthouse_score.outputs.comment }}
